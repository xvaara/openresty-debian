#!/bin/bash

echo -n "Getting versions"
echo -n ".";NGXLUAVERSION=$(curl -s https://github.com/openresty/lua-nginx-module/releases |grep -v rc |grep -m 1 -oP "releases\/tag\/v\K\d+.\d+.\d+")
echo -n ".";OPENRESTYVERSION=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty.spec | grep Version: | awk '{print $2}')
echo -n ".";OPENRESTYVERSIONGH=$(curl -s https://github.com/openresty/openresty/releases |grep -m 1 -oP "(?<=releases\/tag\/v)\d+.\d+.[.\w\d]*")
echo -n ".";OPENSSLVERSION=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty-openssl.spec |grep Version: | awk '{print $2}')
echo -n ".";OPENSSLPATCH=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty-openssl.spec |grep Patch0: | awk '{print $2}')
echo -n ".";OPENSSLPATCH1=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty-openssl.spec |grep Patch1: | awk '{print $2}')
echo -n ".";PCREVERSION=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty-pcre.spec |grep Version: | awk '{print $2}')
echo -n ".";ZLIBVERSION=$(curl -s https://raw.githubusercontent.com/openresty/openresty-packaging/master/rpm/SPECS/openresty-zlib.spec |grep Version: | awk '{print $2}')
echo -n ".";LUAJITVERSION=$(curl -s https://github.com/LuaJIT/LuaJIT/releases |grep "2.1" |grep -m 1 -oP "releases\/tag\/v\K\d+.\d+.\d+-\w+")
echo -n ".";LUAROCKSVERSION=$(curl -s https://github.com/luarocks/luarocks/releases |grep -m 1 -oP "releases\/tag\/v\K\d+.\d+.\d+")
echo "done"

#echo "Setting up working dir..."
OURDIR=$( pwd )
BUILDIR="$OURDIR/builddir"
BUILDROOT="$BUILDIR/root"

echo "Openresty Debian Builder 0.1.0"
echo "--------"
echo "Nginx Lua Version: ${NGXLUAVERSION}"
echo "Openresty Version: ${OPENRESTYVERSION}"
if [[ $OPENRESTYVERSION != $OPENRESTYVERSIONGH ]]; then
  echo "Openresty GITHUB Version: ${OPENRESTYVERSIONGH}"
fi
echo "OpenSSL Version: ${OPENSSLVERSION}"
echo "PCRE Version: ${PCREVERSION}"
echo "ZLIB Version: ${ZLIBVERSION}"
echo "Lua JIT Version: ${LUAJITVERSION}"
echo "Lua Rocks Version: ${LUAROCKSVERSION}"
echo "--------"

if [[ $OPENRESTYVERSION != $OPENRESTYVERSIONGH ]]; then
  echo "Openresty GITHUB in github differs: ${OPENRESTYVERSIONGH} vs ${OPENRESTYVERSION}"
  read -p "Build github version instead? (y/n)" -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    OPENRESTYVERSION=$OPENRESTYVERSIONGH
  fi
fi



echo "builddir: $BUILDIR"
ls $BUILDIR
read -p "Remove downloaded sources? (y/n)" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
  rm -rf $BUILDIR
fi
if ! [ -x "$(command -v fpm)" ]; then
  apt-get -y update
  apt-get -y install wget unzip build-essential ruby-dev libreadline6-dev libncurses5-dev perl rubygems systemtap-sdt-dev
  gem install fpm
fi

# save versions to save on effort
# setup the workdir


#rm -rf $BUILDIR
mkdir -p $BUILDROOT
cd $BUILDIR

echo "Downloading packages..."
if [ ! -d openresty-${OPENRESTYVERSION} ]; then
  wget -O openresty-${OPENRESTYVERSION}.tar.gz https://openresty.org/download/openresty-${OPENRESTYVERSION}.tar.gz
  tar xfz openresty-${OPENRESTYVERSION}.tar.gz
fi
if [ ! -d openssl-${OPENSSLVERSION} ]; then
  wget -O openssl-${OPENSSLVERSION}.tar.gz https://www.openssl.org/source/openssl-${OPENSSLVERSION}.tar.gz
  tar xfz openssl-${OPENSSLVERSION}.tar.gz

  cd openssl-${OPENSSLVERSION}
  curl ${OPENSSLPATCH} |patch -p1
  curl ${OPENSSLPATCH1} |patch -p1
  cd ..
fi
if [ ! -d pcre-${PCREVERSION} ]; then
  wget -O "pcre-${PCREVERSION}.tar.gz" "http://downloads.sourceforge.net/project/pcre/pcre/${PCREVERSION}/pcre-${PCREVERSION}.tar.gz?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fpcre%2Ffiles%2Fpcre%2F${PCREVERSION}%2F&ts=1478753230&use_mirror=pilotfiber"
  tar xfz pcre-${PCREVERSION}.tar.gz
fi
if [ ! -d zlib-${ZLIBVERSION} ]; then
  wget -O zlib-${ZLIBVERSION}.tar.gz http://zlib.net/zlib-${ZLIBVERSION}.tar.gz
  tar xfz zlib-${ZLIBVERSION}.tar.gz
fi
if [ ! -d LuaJIT-${LUAJITVERSION} ]; then
  wget -O LuaJIT-${LUAJITVERSION}.tar.gz http://luajit.org/download/LuaJIT-${LUAJITVERSION}.tar.gz
  tar xfz LuaJIT-${LUAJITVERSION}.tar.gz
fi
if [ ! -d luarocks-${LUAROCKSVERSION} ]; then
  wget -O luarocks-${LUAROCKSVERSION}.tar.gz https://github.com/luarocks/luarocks/archive/v${LUAROCKSVERSION}.tar.gz
  tar xfz luarocks-${LUAROCKSVERSION}.tar.gz
fi

if [ ! -d nchan ]; then
  git clone https://github.com/slact/nchan.git
fi
cd nchan
# Get new tags from the remote
git fetch --tags
# Get the latest tag name
latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
# Checkout the latest tag
git checkout $latestTag
cd ..


if [ ! -d ngx_brotli ]; then
  git clone https://github.com/eustas/ngx_brotli.git
  cd ngx_brotli
  git submodule update --init --recursive
  cd ..
else
  cd ngx_brotli
  git pull
  git submodule update --init --recursive
  cd ..
fi


